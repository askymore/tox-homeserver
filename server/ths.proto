syntax = "proto3";
package thspbs;


service Toxhs {
    rpc PollCallback(EmptyReq) returns(stream Event);
    rpc GetBaseInfo(EmptyReq) returns(BaseInfo);
    rpc RmtCall(Event) returns(Event);
    rpc Ping(EmptyReq) returns(EmptyReq);
}

message Event {
    int32  id = 1; // event id
    int64  mid = 2; // msg id
    string name = 3; // event name
    repeated string args = 4;
    repeated string margs = 5; // more info based on args
    uint64 gid = 6; // global sequnce
    map<string,string> nargs = 7; // named args
    int32 ecode = 8; // error code
    string emsg = 9; // error msg
}

message BaseInfo {
    string id = 1;
    string name = 2;
    string stmsg = 3;
    uint32 status = 4; // statusText
    map<uint32,FriendInfo> friends = 5;
    map<uint32,GroupInfo> groups = 6;
    int32 connStatus = 7;
    int64 nextBatch = 8;
}

message FriendInfo {
    uint32 fnum = 1;
    uint32 status = 2;
    string pubkey = 3;
    string name = 4;
    string stmsg = 5;
    string avatar = 6;
    uint64 seen  = 7;
    int32 connStatus = 8;
}

message GroupInfo {
    uint32 gnum = 1;
    uint32 mtype = 2;
    string groupId = 3;
    string title = 4;
    string stmsg = 5;
    bool ours = 6;
    map<uint32, MemberInfo> members = 7;
}

// = ContactInfo
// 可用于friend,group,peer
message MemberInfo {
    uint32 pnum = 1;
    string pubkey = 2;
    string name = 3;
    enum MemType { UNKNOWN = 0; FRIEND = 1; GROUP = 2; PEER = 3;}
    MemType mtype = 4; // member type, friend, group, peer
}

message Message 
{
    uint64 gid = 1;
    string content = 2;
    MemberInfo peer = 3;
    uint64 created = 4;
    uint64 updated = 5;
}

message Messages
{
    repeated Message msgs = 1;
}


///////
service Greeter {
    rpc SayHello(EmptyReq) returns(HelloReq);
    // 测试带参数的hello
    rpc SayHellox(HelloReq) returns(HelloReq);
}

message EmptyReq {}

message HelloReq {
    string name = 1;
    string msg = 2;
}
message HelloResp {
    int32 code = 1;
    int64 status = 2;
}

